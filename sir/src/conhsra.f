C CONHSRA construida con el programa CONTINUO
C calcula el continuo del HSRA por medio de un ajuste a un polinomio
c de tercer grado.El error maximo es de .125%

	real*4 function conhsra(x)

	implicit real*4 (a-h,o-z)
	real*8 cdoble, conhsra3
	real*4 c1(11),c2(11),c3(11),c4(11),c5(11),c6(11),c7(11)
	data c1/-4.906054765549e13,1.684734544039e11,1.507254517567e7
     &       ,-7561.242976546,0.,0.,0.,0.,0.,0.,0./
	data c2/-4.4650822755e14,6.1319780351059e11,-9.350928003805e7
     &       ,0.,0.,0.,0.,0.,0.,0.,0./
	data c3/-1.025961e15,1.3172859e12,-3.873465e8
     &       ,46486.541,-2.049,0.,0.,0.,0.,0.,0./
	data c4/4.861821e15,-2.2589885e12,4.3764376e8
     &       ,-39279.61444,1.34388,0.,0.,0.,0.,0.,0./
c	data c5/4.353082e17,-1.261996e14,5.31125e9,908890.899,43.24361
c     &       7,-2.0462285d-2,1.0018226758d-6,0.,0.,0.,0./
	data c5/1.758394e15,-3.293986e11,1.6782617e7,0.,0.,0.
     &       ,0.,0.,0.,0.,0./
	data c6/1.61455557e16,-6.544209e12,1.0159316e9
     &       ,-70695.58136,1.852022,0.,0.,0.,0.,0.,0./
	data c7/7.97805136e14,-1.16906597e11,5.315222e6
     &       ,-4.57327954,-3.473452d-3,0.,0.,0.,0.,0.,0./

	if(x.lt.3644.15)then
	    conhsra=c1(1)+x*(c1(2)+x*(c1(3)+x*(c1(4)+x*c1(5))))
	else if(x.lt.3750.)then
	    conhsra=c2(1)+x*(c2(2)+x*(c2(3)+x*(c2(4)+x*c2(5))))
	else if(x.lt.6250.)then
	    conhsra=c3(1)+x*(c3(2)+x*(c3(3)+x*(c3(4)+x*c3(5))))
	else if(x.lt.8300.)then
	    conhsra=c4(1)+x*(c4(2)+x*(c4(3)+x*(c4(4)+x*c4(5))))
	else if(x.lt.8850.)then
	    conhsra=c5(1)+x*(c5(2)+x*(c5(3)+x*(c5(4)+x*c5(5))))
	else if(x.lt.10000.)then
	    conhsra=c6(1)+x*(c6(2)+x*(c6(3)+x*(c6(4)+x*c6(5))))
	else if(x.lt.11000.)then
	    conhsra=c7(1)+x*(c7(2)+x*(c7(3)+x*(c7(4)+x*c7(5))))
	else 
	    cdoble=conhsra3(x)
	    conhsra=real(cdoble)
	end if
	return
	end
c------------------------------------------------------------------	
	real*8 function conhsra3(x)
	
	implicit real*8 (a-h,o-z)
	real*8 par(9,38),xx
	integer in
	real*4 x

	data par/11000.000,  1000.,30.000,
     *  3.48289590000,  0.29332542000, -0.07935836900,
     *  0.00503848490, -0.00010911067,  0.00000000000,
     * 14202.000, 14000.,31.633,
     *  2.25191360000, -2.21467000000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 14250.000,  1000.,30.000,
     *  4.05227510000, -0.18186949000,  0.00083747599,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 14500.000, 14000.,31.580,
     *  2.29667760000, -2.20662120000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 14577.000, 14000.,31.580,
     *  2.25306270000, -2.15553600000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 14600.000,  1000.,30.000,
     * 16.03850900000, -2.65102180000,  0.17030757000,
     * -0.00387231810,  0.00000000000,  0.00000000000,
     * 16350.000, 16000.,31.280,
     * -2.28171060000,  7.49794770000, -5.13656810000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 16419.000, 16000.,31.280,
     *  5.05769590000, -6.35307310000,  1.39139250000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 16450.000,  1000.,30.000,
     *  7.28134070000, -0.58288516000,  0.01843680200,
     * -0.00036871446,  0.00000322391,  0.00000000000,
     * 22750.000, 22800.,30.080,
     *  2.00744630000,  2.28869630000, -6.85888670000,
     *  2.55955890000,  0.00000000000,  0.00000000000,
     * 22776.300, 22800.,30.080,
     *  3.75657130000, -3.75614760000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 22800.000,  1000.,30.000,
     *  6.81529490000, -0.49897589000,  0.01284022100,
     * -0.00020295009,  0.00000137788,  0.00000000000,
     * 30000.100, 30000.,29.035,
     * 18.25140400000,-32.63397200000, 14.38775600000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 30049.999, 10000.,30.000,
     *  4.54297950000, -2.39115090000,  0.18562412000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 32750.100, 30000.,28.700,
     *  1.99525650000,  1.98310880000, -5.41611870000,
     *  1.76582060000,  0.00000000000,  0.00000000000,
     * 32797.900, 30000.,28.700,
     *  3.84567890000, -3.51942910000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 32799.999, 10000.,30.000,
     *  5.89277940000, -3.80810240000,  0.71566516000,
     * -0.08079618200,  0.00386408250,  0.00000000000,
     * 44600.102, 44600.,27.503,
     *  3.90163030000, -3.89929090000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 44641.602, 44600.,27.503,
     *  3.90056690000, -3.89805030000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 44650.002, 10000.,30.000,
     *  4.94129750000, -2.94726560000,  0.42248154000,
     * -0.03623551100,  0.00131391830,  0.00000000000,
     * 58300.000, 58300.,26.454,
     *  3.93593910000, -3.93388820000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 58307.398, 58300.,26.454,
     *  3.93347080000, -3.93137290000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 58349.998, 10000.,30.000,
     *  2.21776400000, -1.30221860000,  0.05384883800,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 60950.000,100000.,25.000,
     *  8.96353530000,-22.78659100000, 25.02728300000,
     *-16.43597400000,  4.56634520000,  0.00000000000,
     * 73700.000, 73800.,25.525,
     *  3.95955200000, -3.95845240000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 73795.398, 73800.,25.525,
     *  3.95587060000, -3.95475520000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 73850.000,100000.,25.000,
     *  8.21656920000,-18.74957000000, 16.82743300000,
     * -9.01723430000,  2.04365850000,  0.00000000000,
     * 91100.000, 91100.,24.690,
     *  3.97991420000, -3.97871510000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 91105.203, 91100.,24.690,
     *  3.97225200000, -3.97104770000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     * 91150.000,100000.,25.000,
     *  6.51536360000,-11.66027200000,  5.71484220000,
     * -1.24929570000,  0.00000000000,  0.00000000000,
     *110900.000,100000.,20.000,
     * 10.82845200000, -9.79083090000,  4.01636330000,
     * -0.73414296000,  0.00000000000,  0.00000000000,
     *131150.000,131150.,23.239,
     *  3.99058200000, -3.98961510000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     *131191.500,131150.,23.239,
     *  3.98348100000, -3.98247530000,  0.00000000000,
     *  0.00000000000,  0.00000000000,  0.00000000000,
     *131200.000,100000.,20.000,
     * 10.11379400000, -8.16836280000,  2.78664550000,
     * -0.42295997000,  0.00000000000,  0.00000000000,
     *160850.000,100000.,20.000,
     *  9.18797430000, -6.46577580000,  1.74014520000,
     * -0.20796399000,  0.00000000000,  0.00000000000,
     *210800.000,100000.,20.000,
     *  8.23869270000, -5.09763050000,  1.08111920000,
     * -0.10187501000,  0.00000000000,  0.00000000000,
     *260750.000,100000.,20.000,
     *  7.47090580000, -4.20699500000,  0.73613949000,
     * -0.05725740900,  0.00000000000,  0.00000000000,
     *310700.000,100000.,20.000,
     *  6.97130390000, -3.90560230000,  0.74610918000,
     * -0.09322419700,  0.00642548360, -0.00018543588/
	
	in=1
	do while(x .gt. par(1,in) .and. in .lt. 38)
	   in=in+1
	enddo
	if(x .le. par(1,in))in=in-1
		
	xx=x/par(2,in)
	yy=par(4,in)+xx*(par(5,in)+xx*(par(6,in)+xx*(par(7,in)
     &	                       +xx*(par(8,in)+xx*par(9,in)))))
     
	
	yyoff=yy+par(3,in)
	if(yyoff .gt. 88.7d0)yyoff=88.7d0
	if(yyoff .lt. -87.3d0)yyoff=-87.3d0
	conhsra3=exp(yyoff)
	
	return
	end
