# This is the config file, generated with create_config.py
mode : 1C # Determines which code is executed
path : ./ # Path location where all the data is stored and will be saved
# 
# Stuff from the data
# 
cube : data.bin  # Data cube name (bin) used for preprocessing data if 'preprocess' is 1
cube_inv : data_inv.bin # Data cube name used for the inversion (bin)
map : xmin,xmax,ymin,ymax # Pixels to be considered as a list (0 means all pixels)
instrument : Hinode # Instrument used (GRIS, Hinode or empty)
quiet_sun : xmin,xmax,ymin,ymax # Quiet sun region for normalization as a list (0 => already normalised)
fts_file : # FTS file, blank = do not correct spectral veil (Hinode is in space => no need)
shift_wave : 0 # Shift the wavelength grid when waves file is created in mA
#
# Data Preprocessing when main.py is executed
#
preprocess : 1 # Preprocess data (1 = True, 0 = False)
quiet_sun : xmin,xmax,ymin,ymax # Quiet sun region for normalization as a list (0 => already normalised)
fts_file : path to fts file # Absolute fts file, blank = do not correct spectral
# 
# Inversion configuration
# 
model : model.mod # Base Model for guess
range_wave : ll1_min,step1, num1;ll2_min,step2, num2 # # Range for the grid file as (Start wavelength in abs. wavelength, Step in mA, Number of wavelenghts) for each line in the grid file.
inv_out : inversion # Prefix of the output of the inversion files
chi2 : chi2.npy # Output of the chi2 values (npy)
line : Lines # Line file
atoms : line1,line2;line3 # Atoms to be used in Grid file
guess :  # Use a .bin file as initial guesses, blank use base model
psf :  # .dat file (if file does not exist, computed from spectral veil parameter), blank=not used
# 
# Control file
# 
cycles : 2 # Number of cycles
weights : 1,1,1,1 # Weights in the control file
nodes_temp : 1 # Nodes in T
nodes_magn : 1 # Nodes in B
nodes_vlos : 1 # Nodes in vlos
nodes_gamma : 1 # Nodes in gamma
nodes_phi : 0 # Nodes in phi
mu_cos : 1 # mu = cos theta
abundance : THEVENIN # Abundance file
gas_pressure :  # Gas Pressure Boundary condition
# 
# Radomisation Settings
# 
random_guess : 10 # Create random guesses, 0 = use model as guess
random_pars : B,T,vlos,gamma # Randomise these parameters in the file(s) below
lim_B : 0,5000 # Limits for the randomisation in B in G
lim_vlos : -1e5,1e5 # Limits for the randomisation in vlos in cm/s
lim_gamma : 0,180 # Limits for the randomisation in the inclination in deg
lim_azimuth : 0,180 # Limits for the randomisation in the azimuth in deg
