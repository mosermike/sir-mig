# SIR MIG config file
mode : 2C # Determines which code is executed
path : Path to the data # Path location where all the data is stored and will be saved
# 
# Stuff from the data
# 
cube_inv : data_inv.bin # Data cube name used for the inversion (bin)
map : xmin,xmax,ymin,ymax # Pixels to be considered as a list (0 means all pixels)
#
# Data Preprocessing
#
preprocess : 1 # Preprocess data (1 = True, 0 = False)
cube       : data.bin # Data cube name (bin) used for preprocessing data
instrument : GRIS # Instrument used (GRIS, Hinode or empty)
quiet_sun  : xmin,xmax,ymin,ymax # Quiet sun region for normalization as a list (0 => already normalised)
fts_file   : path to fts file .dat # Absolute path to fts file, blank = do not correct spectral veil
shift_wave : 0 # Shift the wavelength grid when waves file is created in mA
save_cube  : 0 # Save preprocessed data (merged and normalised) (1=True,0=False)
# 
# Inversion configuration
# 
model1      : model1.mod # Base Model 1 for guess
model2      : model2.mod # Base Model 2 for guess
range_wave  : startt1,step1,num1;start2,step2,num2;... # Range for the grid file as (Start wavelength in abs. wavelength, Step in mA, Number of wavelenghts) for each line in the grid file.
fill        : 0.5,0.5 # Filling factors for both models separated by a ',' (if random_guess > 0)
inv_out     : inversion.npy # Prefix of output of the inversion files
chi2        :  # Compute chi2 and save it under this name
line        : Lines # Line file
atoms       : atom1,atom2;atom3 # Atoms used, ; defines a new line
guess1      :  # Use a bin file as initial guesses, blank use base model 1
guess2      :  # Use a bin file as initial guesses, blank use base model 2
psf         :  # Spectral PSF .dat file, 'gauss 1.0' or blank=not used
# 
# Control file
# 
cycles       : 1 # Number of cycles
weights      : 1,1,1,1 # Weights in the control file
nodes_temp1  :  # Nodes 1 in T
nodes_magn1  :  # Nodes 1 in B
nodes_vlos1  :  # Nodes 1 in vlos
nodes_gamma1 :  # Nodes 1 in gamma
nodes_phi1   :  # Nodes in 1 phi
nodes_temp2  :  # Nodes 2 in T
nodes_magn2  :  # Nodes 2 in B
nodes_vlos2  :  # Nodes 2 in vlos
nodes_gamma2 :  # Nodes 2 in gamma
nodes_phi2   :  # Nodes 2 in phi
mu_cos       :  # mu = cos theta
abundance    : THEVENIN # Abundance file
gas_pressure : 3000 3000 # Gas Pressure Boundary condition (two values separated with a space)
# 
# Radomisation Settings
# 
random_guess : 0 # Create random guesses, 0 = use model as guess
random_pars  : B,T,vlos,gamma,phi # Randomise these parameters in the file(s) below
lim_B1       : 0,5000   # Limits 1 for the randomisation of B in G
lim_vlos1    : -1e5,1e5 # Limits 1 for the randomisation of vlos in cm/s
lim_gamma1   : 0,180    # Limits 1 for the randomisation of the inclination in deg
lim_phi1     : 0,180    # Limits 1 for the randomisation of the azimuth in deg
lim_B2       : 0,5000   # Limits 2 for the randomisation of B in G
lim_vlos2    : -1e5,1e5 # Limits 2 for the randomisation of vlos in cm/s
lim_gamma2   : 0,180    # Limits 2 for the randomisation of the inclination in deg
lim_phi2     : 0,180    # Limits 2 for the randomisation of the azimuth in deg
